function lambda bind 之间的关系
一.function类模版 是一个抽象了函数参数以及返回值的类模版
    到底是具体怎么抽象的？
    1.把任意函数包装成一个对象，该对象可以保存以及复制
    2.动态绑定，只需修改对象（赋值不同的function对象），实现类似多态的效果
    
    具体用途：
    1.保存普通函数，类的静态成员函数
    2.保存仿函数
    3.保存类成员函数
    4.保存lambda表达式

什么是仿函数？
    重载了操作符（）的类
    特征：可以有状态，通过成员变量进行储存状态
        有状态的成员函数称之为闭包

二.lambda表达式
    1.值捕获不能修改外部变量的值,可以在其（）函数后面加上mutable修改传进来的外部变量的值，函数结束之后，外部变量的值仍然不会被改变
    2.使用引用捕获时，外部和内部的值都会被修改
    原理：编译的时候，将lambda表达式转变为一个函数对象
        根据lambda参数列表重载operator()

三.bind函数适配器
    定义：用来通过绑定函数以及函数参数的方式生成函数对象的模版函数
    提供占位符，实现灵活绑定

    std::bind 在 C++ 中的典型应用
    1.与标准库算法配合使用 std::bind 可以和标准库算法配合使用，来绑定函数和算法所需的参数。
    2.与线程结合 std::bind 可以用来将一个函数与其参数绑定，并传递给线程，从而在后台执行